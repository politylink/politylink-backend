
type Member{
	id: ID!
	name: String!
	nameHira: String
	firstName: String
	firstNameHira: String
	lastName: String
	lastNameHira: String
	house: House
	beElectedByElections: [Election!]! @relation(name: "ELECTION_ELECT_MEMBER", direction: "IN")
	submittedBills: [Bill!]! @relation(name: "MEMBER_SUBMIT_BILL", direction: "OUT")
	attendedDiets: [Diet!]! @relation(name: "MEMBER_ATTEND_DIET", direction: "OUT")
	attendedMinutes: [Minutes!]! @relation(name: "MEMBER_ATTEND_MINUTES", direction: "OUT")
	urls: [Url!]! @relation(name: "URL_REFER_MEMBER", direction: "IN")
	timelines: [Timeline!]! @relation(name: "TIMELINE_REFER_MEMBER", direction: "IN")
}

enum House{
	SYUGIIN
	SANGIIN
}

enum ElectionType{
	CONSTITUENCY
	PROPORTIONAL
}

type Election{
	id: ID!
	electionType: ElectionType!
	district: String!
	prefecture: String
	datetime: DateTime!
	electedMembers: [Member!]! @relation(name: "ELECTION_ELECT_MEMBER", direction: "OUT")
}

type Diet{
	id: ID!
	number: Int!
	name: String!
	startDate: DateTime
	endDate: DateTime
	receivedBills: [Bill!]! @relation(name: "DIET_RECEIVE_BILL", direction: "OUT")
	minutes: [Minutes!]! @relation(name: "MINUTES_BELONG_TO_DIET", direction: "IN")
}

type Law{
	id: ID!
	lawTitle: String!
	lawNumber: String!
	beDiscussedByMinutes: [Minutes!]! @relation(name: "MINUTES_DISCUSS_LAW", direction: "IN")
	referredLaws: [Law!]! @relation(name: "LAW_REFER_LAW", direction: "OUT")
	beReferredByLaws: [Law!]! @relation(name: "LAW_REFER_LAW", direction: "IN")
	beAmendedByBills: [Bill!]! @relation(name: "BILL_AMEND_LAW", direction: "IN")
	urls: [Url!]! @relation(name: "URL_REFER_LAW", direction: "IN")
	timelines: [Timeline!]! @relation(name: "TIMELINE_REFER_LAW", direction: "IN")
}

enum BillCategory{
	KAKUHOU
	SYUHOU
	SANHOU
}

enum BillType{
	NEW
	AMENDMENT
}

type Bill{
	id: ID!
	billTitle: String!
	billNumber: String!
	billCategory: BillCategory!
	billType: BillType
	beSubmittedByMembers: [Member!]! @relation(name: "MEMBER_SUBMIT_BILL", direction: "IN")
	beReceivedByDiet: Diet @relation(name: "DIET_RECEIVE_BILL", direction: "IN")
	beDiscussedByMinutes: [Minutes!]! @relation(name: "MINUTES_DISCUSS_BILL", direction: "IN")
	amendedLaws: [Law!]! @relation(name: "BILL_AMEND_LAW", direction: "OUT")
	submittedDate: DateTime
	passedSyugiinCommitteeDate: DateTime
	passedSyugiinDate: DateTime
	passedSangiinCommitteeDate: DateTime
	passedSangiinDate: DateTime
	proclaimedDate: DateTime
	urls: [Url!]! @relation(name: "URL_REFER_BILL", direction: "IN")
	timelines: [Timeline!]! @relation(name: "TIMELINE_REFER_BILL", direction: "IN")
}

type Committee{
	id: ID!
	name: String!
	house: House!
	members: [Member!]! @relation(name: "MEMBER_BELONG_TO_COMMITTEE", direction: "IN")
	minutes: [Minutes!]! @relation(name: "MINUTES_BELONG_TO_COMMITTEE", direction: "IN")
}

type Minutes{
	id: ID!
	minutesNumber: String!
	startDateTime: DateTime
	endDateTime: DateTime
	belongedToDiet: Diet @relation(name: "MINUTES_BELONG_TO_DIET", direction: "OUT")
	belongedToCommittee: Committee @relation(name: "MINUTES_BELONG_TO_COMMITTEE", direction: "OUT")
	beAttendedByMembers: [Member!]! @relation(name: "MEMBER_ATTEND_MINUTES", direction: "IN")
	topics: [String!]!
	discussedBills: [Bill!]! @relation(name: "MINUTES_DISCUSS_BILL", direction: "OUT")
	discussedLaws: [Law!]! @relation(name: "MINUTES_DISCUSS_LAW", direction: "OUT")
}

type Url {
	id: ID!
	url: String!
	domain: String
	title: String
	description: String
	referredBills: [Bill!]! @relation(name: "URL_REFER_BILL", direction: "OUT")
	referredLaws: [Law!]! @relation(name: "URL_REFER_LAW", direction: "OUT")
	referredMembers: [Member!]! @relation(name: "URL_REFER_MEMBER", direction: "OUT")
}

type Timeline {
	id: ID!
	content: String
	datetime: DateTime
	referredBills: [Bill!]! @relation(name: "TIMELINE_REFER_BILL", direction: "OUT")
	referredLaws: [Law!]! @relation(name: "TIMELINE_REFER_LAW", direction: "OUT")
	referredMembers: [Member!]! @relation(name: "TIMELINE_REFER_MEMBER", direction: "OUT")
}

type Query {
	totalMembers: Int! @cypher(
            statement: """
            MATCH (n:Member)
	    RETURN COUNT(n)
            """
            )
	allMembers: [Member!]!
	totalElections: Int! @cypher(
            statement: """
            MATCH (n:Election)
	    RETURN COUNT(n)
            """
            )
	allElections: [Election!]!
	totalDiets: Int! @cypher(
            statement: """
            MATCH (n:Diet)
	    RETURN COUNT(n)
            """
            )
	allDiets: [Diet!]!
	totalLaws: Int! @cypher(
            statement: """
            MATCH (n:Law)
	    RETURN COUNT(n)
            """
            )
	allLaws: [Law!]!
	totalBills: Int! @cypher(
            statement: """
            MATCH (n:Bill)
	    RETURN COUNT(n)
            """
            )
	allBills: [Bill!]!
	totalCommittees: Int! @cypher(
            statement: """
            MATCH (n:Comittee)
	    RETURN COUNT(n)
            """
            )
	allCommittees: [Committee!]!
	totalMinutes: Int! @cypher(
            statement: """
            MATCH (n:Minutes)
	    RETURN COUNT(n)
            """
            )
	allMinutes: [Minutes!]!
}
schema{
	query: Query
}
